$date
	Sun Jan 21 19:12:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RV32_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module DUT $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 # PC_Top [31:0] $end
$var wire 32 $ PCP4_Top [31:0] $end
$var wire 32 % Instr [31:0] $end
$var wire 1 & Controller_WE $end
$var wire 4 ' Controller_ALU [3:0] $end
$var wire 32 ( ALU_res [31:0] $end
$var wire 32 ) ALU_in2 [31:0] $end
$var wire 32 * ALU_in1 [31:0] $end
$var reg 1 + write $end
$scope module ALU $end
$var wire 4 , control [3:0] $end
$var wire 32 - alu_slt [31:0] $end
$var wire 32 . B [31:0] $end
$var wire 32 / ALU_result [31:0] $end
$var wire 32 0 A [31:0] $end
$upscope $end
$scope module Instruction_memory $end
$var wire 1 " rst $end
$var wire 32 1 RD [31:0] $end
$var wire 32 2 A [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 3 PCP4 [31:0] $end
$var reg 32 4 PC [31:0] $end
$upscope $end
$scope module PC_adder $end
$var wire 32 5 PC_add [31:0] $end
$var wire 32 6 PCP4_add [31:0] $end
$upscope $end
$scope module controller $end
$var wire 3 7 funct3 [2:0] $end
$var wire 7 8 funct7 [6:0] $end
$var wire 32 9 instr [31:0] $end
$var wire 7 : opcode [6:0] $end
$var wire 5 ; rd [4:0] $end
$var wire 5 < rs1 [4:0] $end
$var wire 5 = rs2 [4:0] $end
$var wire 4 > ALU_control [3:0] $end
$var reg 1 & RegWE $end
$upscope $end
$scope module regfile $end
$var wire 5 ? AddA [4:0] $end
$var wire 5 @ AddB [4:0] $end
$var wire 5 A AddD [4:0] $end
$var wire 32 B DataD [31:0] $end
$var wire 1 & WE $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 C DataB [31:0] $end
$var wire 32 D DataA [31:0] $end
$var reg 5 E index [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b100 6
b0 5
b0 4
b100 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
1+
b0 *
b0 )
b0 (
b0 '
1&
b0 %
b100 $
b0 #
0"
1!
$end
#50
0!
#100
1!
#150
b1 -
b1111 (
b1111 /
b1111 B
b1010 )
b1010 .
b1010 C
b101 *
b101 0
b101 D
b1 ;
b100 =
b11 <
b110011 :
b100 @
b11 ?
b1 A
b10000011000000010110011 %
b10000011000000010110011 1
b10000011000000010110011 9
0!
1"
#200
b1 '
b1 ,
b1 >
b0 -
b0 (
b0 /
b0 B
b0 )
b0 .
b0 C
b0 *
b0 0
b0 D
b100000 8
b10 ;
b110 =
b101 <
b110 @
b101 ?
b10 A
b1000000011000101000000100110011 %
b1000000011000101000000100110011 1
b1000000011000101000000100110011 9
b1000 $
b1000 3
b1000 6
b100 #
b100 2
b100 4
b100 5
1!
#250
0!
#300
b10 '
b10 ,
b10 >
b0 8
b1 7
b111 ;
b1001 =
b1000 <
b1001 @
b1000 ?
b111 A
b100101000001001110110011 %
b100101000001001110110011 1
b100101000001001110110011 9
b1100 $
b1100 3
b1100 6
b1000 #
b1000 2
b1000 4
b1000 5
1!
#350
0!
#400
b11 '
b11 ,
b11 >
b10 7
b1010 ;
b1100 =
b1011 <
b1100 @
b1011 ?
b1010 A
b110001011010010100110011 %
b110001011010010100110011 1
b110001011010010100110011 9
b10000 $
b10000 3
b10000 6
b1100 #
b1100 2
b1100 4
b1100 5
1!
#450
0!
#500
b100 '
b100 ,
b100 >
b11 7
b1101 ;
b1111 =
b1110 <
b1111 @
b1110 ?
b1101 A
b111101110011011010110011 %
b111101110011011010110011 1
b111101110011011010110011 9
b10100 $
b10100 3
b10100 6
b10000 #
b10000 2
b10000 4
b10000 5
1!
#550
0!
#600
b101 '
b101 ,
b101 >
b100 7
b10000 ;
b10010 =
b10001 <
b10010 @
b10001 ?
b10000 A
b1001010001100100000110011 %
b1001010001100100000110011 1
b1001010001100100000110011 9
b11000 $
b11000 3
b11000 6
b10100 #
b10100 2
b10100 4
b10100 5
1!
#650
0!
#700
b110 '
b110 ,
b110 >
b101 7
b10011 ;
b10101 =
b10100 <
b10101 @
b10100 ?
b10011 A
b1010110100101100110110011 %
b1010110100101100110110011 1
b1010110100101100110110011 9
b11100 $
b11100 3
b11100 6
b11000 #
b11000 2
b11000 4
b11000 5
1!
#750
0!
#800
b111 '
b111 ,
b111 >
b100000 8
b10110 ;
b11000 =
b10111 <
b11000 @
b10111 ?
b10110 A
b1000001100010111101101100110011 %
b1000001100010111101101100110011 1
b1000001100010111101101100110011 9
b100000 $
b100000 3
b100000 6
b11100 #
b11100 2
b11100 4
b11100 5
1!
#850
0!
#900
b1000 '
b1000 ,
b1000 >
b0 8
b110 7
b11001 ;
b11011 =
b11010 <
b11011 @
b11010 ?
b11001 A
b1101111010110110010110011 %
b1101111010110110010110011 1
b1101111010110110010110011 9
b100100 $
b100100 3
b100100 6
b100000 #
b100000 2
b100000 4
b100000 5
1!
#950
0!
#1000
b1001 '
b1001 ,
b1001 >
b111 7
b11100 ;
b11110 =
b11101 <
b11110 @
b11101 ?
b11100 A
b1111011101111111000110011 %
b1111011101111111000110011 1
b1111011101111111000110011 9
b101000 $
b101000 3
b101000 6
b100100 #
b100100 2
b100100 4
b100100 5
1!
#1050
0!
